properties([pipelineTriggers([githubPush()])])
def label = "worker-${UUID.randomUUID().toString()}"

podTemplate(label: label, containers: [
  containerTemplate(name: 'buildah', image: 'ngol/buildah:v1', command: 'cat', imagePullPolicy: 'Always' , privileged: true, ttyEnabled: true),
  containerTemplate(name: 'kubectl', image: 'lachlanevenson/k8s-kubectl:v1.8.8', command: 'cat', ttyEnabled: true),
  containerTemplate(name: 'helm', image: 'lachlanevenson/k8s-helm:latest', command: 'cat', ttyEnabled: true)
],
volumes: [
  hostPathVolume(mountPath: '/mnt', hostPath: '/mnt')
]) {
  node(label) {
       git url: "https://github.com/ngo-l/jenkins-build-test",branch: 'master'

    stage('Build') {
      container('buildah') {        
           withCredentials([sshUserPrivateKey(credentialsId: "9bcc9b80-6899-4b4b-8aa5-eb0080545418", keyFileVariable: 'keyfile')]) {
            // start ssh-agent
            sh "mkdir ~/.ssh/"
            sh 'ssh-agent /bin/bash'           
            // add private key to ssh-agent, check if private key is successfully added and git clone using the private key
            sh 'eval $(ssh-agent) && ssh-add ${keyfile} && ssh-add -l && ssh-keyscan github.com  >> ~/.ssh/known_hosts && git clone git@github.com:ngo-l/jenkins-build-test.git'
            }
          sh 'pwd && ls ./'
          sh 'buildah bud -t betalabsk8sacr.azurecr.io/ngo/dev:test1'
          sh 'buildah images '
      }
    }

  }
}
